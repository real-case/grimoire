version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: grimoire-postgres
    environment:
      POSTGRES_USER: grimoire_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: grimoire
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grimoire_user -d grimoire"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: grimoire-redis
    command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: grimoire-api
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://grimoire_user:password@postgres:5432/grimoire
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./apps/api:/app
      - /app/__pycache__
      - /app/.venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
