[project]
name = "grimoire"
version = "1.0.0"
description = "Comprehensive word information API for EFL learners"
authors = [{name = "Grimoire Team"}]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}

dependencies = [
    "fastapi==0.109.0",
    "uvicorn[standard]==0.27.0",
    "gunicorn==21.2.0",
    "anthropic==0.18.0",
    "sqlalchemy[asyncio]==2.0.25",
    "asyncpg==0.29.0",
    "alembic==1.13.1",
    "redis[hiredis]==5.0.1",
    "arq==0.25.0",
    "httpx==0.26.0",
    "pydantic==2.5.3",
    "pydantic-settings==2.1.0",
    "loguru==0.7.2",
    "sentry-sdk[fastapi]==1.40.0",
    "python-dotenv==1.0.0",
    "python-multipart==0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.4",
    "pytest-asyncio==0.23.3",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "ruff==0.1.14",
    "black==24.1.1",
    "mypy==1.8.0",
]

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers --cov=src --cov-report=term-missing --cov-report=html"

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"
